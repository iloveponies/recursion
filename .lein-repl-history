(doc first)
(doc rest)
(defn announce-treasurelocation
[{lat :lat lon :lon}]
(prinln (str "Treasure lat:" lat))
(println (str "Treasure lon:" lon)))
(defn announce-treasurelocation
[{lat :lat lon :lon}]
(println (str "Treasure lat:" lat))
(println (str "Treasure lon:" lon)))
(announce-treasurelocation {:lat 28.22 :lon 81.33})
(defn singleton? [coll]
  (cond
    (empty? coll) false
    (empty? rest) true
    :else false))
(singleton? [1])     ;=> true
(singleton? #{2})    ;=> true
(singleton? [])      ;=> false
(singleton? [1 2 3]) 
(defn singleton? [coll]
  (cond
    (empty? coll) false
    (empty? (rest coll)) true
    :else false))
(singleton? [1 2 3]) 
(singleton? #{2})    ;=> true
(singleton? [])
(empty? (rest []))
(empty? (first []))
(first [])
(defn my-last [coll]
  (if (empty? (rest coll))
    (first coll)
    (my-last (rest coll))))
(my-last [])      ;=> nil
(my-last [1 2 3]) ;=> 3
(my-last [2 5])   ;=> 5
